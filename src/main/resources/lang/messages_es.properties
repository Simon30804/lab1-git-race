# Saludos
hello=Hola
good_morning=Buenos días
good_afternoon=Buenas tardes
good_night=Buenas noches

# Saludos con nombre
welcome=¡Bienvenido, {0}!
good_morning_con_nombre=Buenos días, {0}!
good_afternoon_con_nombre=Buenas tardes, {0}!
good_night_con_nombre=Buenas noches, {0}!

# Navegación
app.title=Aplicación Web Moderna
nav.health=Salud
nav.api=API
nav.language=Idioma
nav.login=Iniciar Sesión

# Idiomas
language.english=English
language.spanish=Español
language.french=Français
change_es=Cambiar a Español
change_fr=Cambiar a Francés
change_en=Cambiar a Inglés

# Formulario de login
form.email=Dirección de correo
form.email.placeholder=correo@ejemplo.com
form.password=Contraseña
form.password.placeholder=Contraseña
form.remember=Recordarme
form.signin=Iniciar sesión

# Main Content
welcome.title=Bienvenido a la Aplicación Web Moderna
welcome.subtitle=Hola estudiante.

# HTTP Debug Section
debug.title=Pruebas HTTP Interactivas y Depuración
debug.subtitle=Herramienta Educativa del Cliente
debug.description=Esta sección demuestra peticiones y respuestas HTTP usando la API Fetch de JavaScript. ¡Todas las interacciones mostrarán comunicación HTTP real en acción!

# HTTP Testing Cards
test.web.title=Saludo de Página Web
test.web.description=Prueba la página web principal con saludo personalizado
test.web.placeholder=Introduce tu nombre
test.web.button=Probar Página Web

test.api.title=Endpoints de la API
test.api.description=Prueba la API REST con respuesta JSON
test.api.placeholder=Introduce nombre (opcional)
test.api.button=Probar /api/hello

test.health.title=Verificación de Salud
test.health.description=Prueba el endpoint de salud de la aplicación
test.health.button=Probar /actuator/health
test.devtools.button=Cómo Abrir Dev Tools

# HTTP Debug Display
http.request.title=Petición HTTP
http.response.title=Respuesta HTTP
http.request.placeholder=Haz clic en un botón de prueba para ver detalles de la petición HTTP...
http.response.placeholder=Haz clic en un botón de prueba para ver detalles de la respuesta HTTP...

# Learning Notes
learning.title=Notas de Aprendizaje:
learning.fetch=Forma moderna de JavaScript para hacer peticiones HTTP
learning.promise=Operaciones asíncronas usando .then() y async/await
learning.json=Los endpoints de API devuelven datos estructurados
learning.status=200 = éxito, 404 = no encontrado, 500 = error del servidor
learning.headers=Metadatos enviados con cada petición y respuesta

# Footer
footer.text=© 2025 Aplicación Web Moderna. Construida con Spring Boot 3.5.3 y Kotlin 2.2.10