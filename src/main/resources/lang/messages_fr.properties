# Saludos
hello=Bonjour
good_morning=Bonjour
good_afternoon=Bon après-midi
good_night=Bonne nuit

# Saludos con nombre
welcome=Bienvenue, {0}!
good_morning_con_nombre=Bonjour, {0}!
good_afternoon_con_nombre=Bon après-midi, {0}!
good_night_con_nombre=Bonne nuit, {0}!

# Navegación
app.title=Application Web Moderne
nav.health=Santé
nav.api=API
nav.language=Langue
nav.login=Connexion

# Idiomas
language.english=English
language.spanish=Español
language.french=Français
change_es=Passer à l'espagnol
change_fr=Passer au français
change_en=Passer à l'anglais

# Formulario de login
form.email=Adresse e-mail
form.email.placeholder=email@exemple.com
form.password=Mot de passe
form.password.placeholder=Mot de passe
form.remember=Se souvenir de moi
form.signin=Se connecter

# Main Content
welcome.title=Bienvenue dans l'Application Web Moderne
welcome.subtitle=Bonjour étudiant.

# HTTP Debug Section
debug.title=Tests HTTP Interactifs et Débogage
debug.subtitle=Outil Éducatif Client
debug.description=Cette section démontre les requêtes et réponses HTTP en utilisant l'API Fetch de JavaScript. Toutes les interactions afficheront une communication HTTP réelle en action !

# HTTP Testing Cards
test.web.title=Salutation de la Page Web
test.web.description=Testez la page web principale avec une salutation personnalisée
test.web.placeholder=Entrez votre nom
test.web.button=Tester la Page Web
test.api.title=Points de terminaison de l'API
test.api.description=Testez l'API REST avec une réponse JSON
test.api.placeholder=Entrez un nom (optionnel)
test.api.button=Tester /api/hello
test.health.title=Vérification de Santé
test.health.description=Testez le point de terminaison de santé de l'application
test.health.button=Tester /actuator/health
test.devtools.button=Comment Ouvrir les Outils de Développement

# HTTP Request and Response
http.request.title=Requête HTTP
http.request.placeholder=Cliquez sur un bouton de test ci-dessus pour voir les détails de la requête HTTP...
http.response.title=Réponse HTTP
http.response.placeholder=Cliquez sur un bouton de test ci-dessus pour voir les détails de la réponse HTTP...

# Learning Notes
learning.title=Notes d'Apprentissage :
learning.fetch=Fetch API :Manière moderne en JavaScript de faire des requêtes HTTP
learning.promise=Basé sur les Promesses :Opérations asynchrones utilisant .then() et async/await
learning.json=Réponse JSON :Les points de terminaison de l'API renvoient des données structurées
learning.status=Codes de Statut :200 = succès, 404 = non trouvé, 500 = erreur serveur
learning.headers=En-têtes :Métadonnées envoyées avec chaque requête et réponse

# Footer
footer.text=&copy; 2025 Application Web Moderne. Construit avec Spring Boot 3.5.3 & Kotlin 2.2.10
