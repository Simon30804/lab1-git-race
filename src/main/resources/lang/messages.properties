# Saludos sin nombre
hello=Hello
good_morning=Good morning
good_afternoon=Good afternoon
good_night=Good night

# Saludos con nombre
welcome=Welcome, {0}!
good_morning_con_nombre=Good morning, {0}!
good_afternoon_con_nombre=Good afternoon, {0}!
good_night_con_nombre=Good night, {0}!

# Navegación
app.title=Modern Web App
nav.health=Health
nav.api=API
nav.language=Language
nav.login=Login

# Idiomas
language.english=English
language.spanish=Español
language.french=Français
change_es=Change to Spanish
change_fr=Change to French
change_en=Change to English

# Formulario de login
form.email=Email address
form.email.placeholder=email@example.com
form.password=Password
form.password.placeholder=Password
form.remember=Remember me
form.signin=Sign in

# Main
welcome.title=Welcome to the Modern Web App
welcome.subtitle=Hello student.

# HTTP Debug Section
debug.title=Interactive HTTP Testing and Debugging
debug.subtitle=Client Educational Tool
debug.description=This section demonstrates HTTP requests and responses using the JavaScript Fetch API. All interactions will show real HTTP communication in action!

# HTTP Testing Cards
test.web.title=Web Page Greeting
test.web.description=Test the main web page with personalized greeting
test.web.placeholder=Enter your name
test.web.button=Test Web Page
test.api.title=API Endpoints
test.api.description=Test the REST API with JSON response
test.api.placeholder=Enter name (optional)
test.api.button=Test /api/hello
test.health.title=Health Check
test.health.description=Test the application health endpoint
test.health.button=Test /actuator/health
test.devtools.button=How to Open Dev Tools

# HTTP Request and Response
http.request.title=HTTP Request
http.request.placeholder=Click a test button above to see HTTP request details...
http.response.title=HTTP Response
http.response.placeholder=Click a test button above to see HTTP response details...

# Learning Notes
learning.title=Learning Notes:
learning.fetch=Fetch API: Modern JavaScript way to make HTTP requests
learning.promise=Promise-based: Asynchronous operations using .then() and async/await
learning.json=JSON Response: API endpoints return structured data
learning.status=Status Codes: 200 = success, 404 = not found, 500 = server error
learning.headers=Headers: Metadata sent with every request and response

# Footer
footer.text=&copy; 2025 Modern Web App. Built with Spring Boot 3.5.3 & Kotlin 2.2.10